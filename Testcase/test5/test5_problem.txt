(define (problem prob)
 (:domain puzzle)
 (:objects 
        num1 num2 num3 num4 num5 num6 num7 num8
        loc1 loc2 loc3 loc4 loc5 loc6 loc7 loc8 loc9
 )
 (:init 
        (num num1) (num num2) (num num3) (num num4) (num num5) (num num6) (num num7) (num num8)
        (loc loc1) (loc loc2) (loc loc3) (loc loc4) (loc loc5) (loc loc6) (loc loc7) (loc loc8) (loc loc9)
        
        (blank loc6) (at-loc num1 loc1) (at-loc num2 loc2) (at-loc num3 loc3) (at-loc num4 loc8)
        (at-loc num5 loc9) (at-loc num6 loc7) (at-loc num7 loc4) (at-loc num8 loc5)
        
        (left loc1 loc2)
        (left loc2 loc3)
        (left loc4 loc5)
        (left loc5 loc6)
        (left loc7 loc8)
        (left loc8 loc9)
        (right loc2 loc1)
        (right loc3 loc2)
        (right loc5 loc4)
        (right loc6 loc5)
        (right loc8 loc7)
        (right loc9 loc8)
        (up loc1 loc4)
        (up loc4 loc7)
        (up loc2 loc5)
        (up loc5 loc8)
        (up loc3 loc6)
        (up loc6 loc9)
        (down loc4 loc1)
        (down loc7 loc4)
        (down loc5 loc2)
        (down loc8 loc5)
        (down loc6 loc3)
        (down loc9 loc6)
        )
 (:goal (and
            (at-loc num1 loc1)
            (at-loc num2 loc2)
            (at-loc num3 loc3)
            (at-loc num4 loc4)
            (at-loc num5 loc5)
            (at-loc num6 loc6)
            (at-loc num7 loc7)
            (at-loc num8 loc8)
            (blank loc9)
            )
 )
)